<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0 (Python 3.10.4 on win32)" generated="20221128 18:52:03.363" rpa="false" schemaversion="3">
<suite id="s1" name="Deckofcards" source="C:\Users\higor_mesquita\Documents\HST\PDI\2_PDI\Deckofcards">
<suite id="s1-s1" name="Tests" source="C:\Users\higor_mesquita\Documents\HST\PDI\2_PDI\Deckofcards\tests">
<suite id="s1-s1-s1" name="Drawacard Tc" source="C:\Users\higor_mesquita\Documents\HST\PDI\2_PDI\Deckofcards\tests\drawacard_tc.robot">
<kw name="Conexao com API" library="services" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>${alias}</arg>
<arg>${baseurl}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20221128 18:52:03.549" level="INFO">Creating Session using : alias=deckofcards, url=http://deckofcardsapi.com/api/deck/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20221128 18:52:03.547" endtime="20221128 18:52:03.550"/>
</kw>
<status status="PASS" starttime="20221128 18:52:03.546" endtime="20221128 18:52:03.550"/>
</kw>
<test id="s1-s1-s1-t1" name="CT-04 - Validar retirada de cartas de um deck misturado" line="30">
<kw name="Dado que eu faça uma requisição GET na API Deck of Cards shuffle cards com &quot;1&quot; decks" library="shufflethecards_steps" sourcename="Dado que eu faça uma requisição GET na API Deck of Cards shuffle cards com &quot;${many_shuffle_decks}&quot; decks">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${alias}</arg>
<arg>url=${baseurl}new/shuffle/?deck_count=${many_shuffle_decks}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20221128 18:52:04.934" level="INFO">GET Request : url=http://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1 (redirected) 
 path_url=/api/deck/new/shuffle/?deck_count=1 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221128 18:52:04.936" level="INFO">GET Response : url=https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1 
 status=200, reason=OK 
 headers={'Date': 'Mon, 28 Nov 2022 21:52:03 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'X-Content-Type-Options': 'nosniff', 'Referrer-Policy': 'same-origin', 'X-Frame-Options': 'DENY', 'Vary': 'Origin', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=6Gqd5Siid%2BW56ado%2BN7GuDFN12fVtTO%2FTfyOXPogDfkSY1qEyL8EcWoubJZFCnbv6%2FSjoExURMH6NdlrJ8sn8JvNwOU%2BoFriHDbogvO6nA%2F94CUV6uWQrLjZ4aMDZ8XWi%2Ftyi9Ww5hH7ROb%2BnnAyDRI%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '771654137a7c2687-GIG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400, h3-29=":443"; ma=86400'} 
 body={"success": true, "deck_id": "09rgaq4umrr5", "remaining": 52, "shuffled": true} 
 </msg>
<msg timestamp="20221128 18:52:04.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221128 18:52:03.555" endtime="20221128 18:52:04.939"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20221128 18:52:04.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221128 18:52:04.940" endtime="20221128 18:52:04.942"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${remaining}</var>
<arg>${response.json()}</arg>
<arg>$.remaining</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20221128 18:52:05.013" level="INFO">${remaining} = [52]</msg>
<status status="PASS" starttime="20221128 18:52:04.942" endtime="20221128 18:52:05.014"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${remaining}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20221128 18:52:05.016" level="INFO">${remaining} = [52]</msg>
<status status="PASS" starttime="20221128 18:52:05.014" endtime="20221128 18:52:05.018"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${many_shuffle_decks}</var>
<arg>int(${many_shuffle_decks}*52)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221128 18:52:05.019" level="INFO">${many_shuffle_decks} = 52</msg>
<status status="PASS" starttime="20221128 18:52:05.018" endtime="20221128 18:52:05.021"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${many_shuffle_decks}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20221128 18:52:05.023" level="INFO">${many_shuffle_decks} = 52</msg>
<status status="PASS" starttime="20221128 18:52:05.021" endtime="20221128 18:52:05.025"/>
</kw>
<status status="PASS" starttime="20221128 18:52:03.553" endtime="20221128 18:52:05.026"/>
</kw>
<kw name="E pegar o valor do campo deck_id" library="abrandnewdeck_steps">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${deck_id_new}</var>
<arg>${response.json()}</arg>
<arg>$.deck_id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20221128 18:52:05.056" level="INFO">${deck_id_new} = ['09rgaq4umrr5']</msg>
<status status="PASS" starttime="20221128 18:52:05.029" endtime="20221128 18:52:05.057"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${deck_id_new}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20221128 18:52:05.058" level="INFO">${deck_id_new} = ['09rgaq4umrr5']</msg>
<status status="PASS" starttime="20221128 18:52:05.057" endtime="20221128 18:52:05.059"/>
</kw>
<status status="PASS" starttime="20221128 18:52:05.027" endtime="20221128 18:52:05.060"/>
</kw>
<kw name="Quando eu escolher uma quantidade &quot;15&quot; cartas" library="drawacard_steps" sourcename="Quando eu escolher uma quantidade &quot;${numero_de_cartas}&quot; cartas">
<kw name="Evaluate" library="BuiltIn">
<var>${deck_id_new}</var>
<arg>"".join(${deck_id_new})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221128 18:52:05.062" level="INFO">${deck_id_new} = 09rgaq4umrr5</msg>
<status status="PASS" starttime="20221128 18:52:05.062" endtime="20221128 18:52:05.063"/>
</kw>
<kw name="Remove String" library="String">
<var>${deck_id_new}</var>
<arg>${deck_id_new}</arg>
<arg>[</arg>
<arg>]</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20221128 18:52:05.065" level="INFO">${deck_id_new} = 09rgaq4umrr5</msg>
<status status="PASS" starttime="20221128 18:52:05.063" endtime="20221128 18:52:05.066"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${alias}</arg>
<arg>url=${baseurl}${deck_id_new}/draw/?count=${numero_de_cartas}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20221128 18:52:05.561" level="INFO">GET Request : url=http://deckofcardsapi.com/api/deck/09rgaq4umrr5/draw/?count=15 (redirected) 
 path_url=/api/deck/09rgaq4umrr5/draw/?count=15 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221128 18:52:05.562" level="INFO">GET Response : url=https://deckofcardsapi.com/api/deck/09rgaq4umrr5/draw/?count=15 
 status=200, reason=OK 
 headers={'Date': 'Mon, 28 Nov 2022 21:52:04 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'X-Content-Type-Options': 'nosniff', 'Referrer-Policy': 'same-origin', 'X-Frame-Options': 'DENY', 'Vary': 'Origin', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=Ahorb1JQuROgzTACauAe2G3F8NwveBN7FXS6srFys7O73BPE%2FWKrWpHoGH6%2BVjPmbNKFlJMYSzaeJI8kh%2FjOEqARuW4WuGc1P0GQ9Lb8nFuwdAhBROXbVX726Q%2B0ar7D%2F%2FRABAhPxLQ9h6mPoHMi4rc%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '7716541a5f862687-GIG', 'Content-Encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400, h3-29=":443"; ma=86400'} 
 body={"success": true, "deck_id": "09rgaq4umrr5", "cards": [{"code": "JH", "image": "https://deckofcardsapi.com/static/img/JH.png", "images": {"svg": "https://deckofcardsapi.com/static/img/JH.svg", "png": "https://deckofcardsapi.com/static/img/JH.png"}, "value": "JACK", "suit": "HEARTS"}, {"code": "3S", "image": "https://deckofcardsapi.com/static/img/3S.png", "images": {"svg": "https://deckofcardsapi.com/static/img/3S.svg", "png": "https://deckofcardsapi.com/static/img/3S.png"}, "value": "3", "suit": "SPADES"}, {"code": "4C", "image": "https://deckofcardsapi.com/static/img/4C.png", "images": {"svg": "https://deckofcardsapi.com/static/img/4C.svg", "png": "https://deckofcardsapi.com/static/img/4C.png"}, "value": "4", "suit": "CLUBS"}, {"code": "QC", "image": "https://deckofcardsapi.com/static/img/QC.png", "images": {"svg": "https://deckofcardsapi.com/static/img/QC.svg", "png": "https://deckofcardsapi.com/static/img/QC.png"}, "value": "QUEEN", "suit": "CLUBS"}, {"code": "AS", "image": "https://deckofcardsapi.com/static/img/AS.png", "images": {"svg": "https://deckofcardsapi.com/static/img/AS.svg", "png": "https://deckofcardsapi.com/static/img/AS.png"}, "value": "ACE", "suit": "SPADES"}, {"code": "0S", "image": "https://deckofcardsapi.com/static/img/0S.png", "images": {"svg": "https://deckofcardsapi.com/static/img/0S.svg", "png": "https://deckofcardsapi.com/static/img/0S.png"}, "value": "10", "suit": "SPADES"}, {"code": "0H", "image": "https://deckofcardsapi.com/static/img/0H.png", "images": {"svg": "https://deckofcardsapi.com/static/img/0H.svg", "png": "https://deckofcardsapi.com/static/img/0H.png"}, "value": "10", "suit": "HEARTS"}, {"code": "AH", "image": "https://deckofcardsapi.com/static/img/AH.png", "images": {"svg": "https://deckofcardsapi.com/static/img/AH.svg", "png": "https://deckofcardsapi.com/static/img/AH.png"}, "value": "ACE", "suit": "HEARTS"}, {"code": "JD", "image": "https://deckofcardsapi.com/static/img/JD.png", "images": {"svg": "https://deckofcardsapi.com/static/img/JD.svg", "png": "https://deckofcardsapi.com/static/img/JD.png"}, "value": "JACK", "suit": "DIAMONDS"}, {"code": "9S", "image": "https://deckofcardsapi.com/static/img/9S.png", "images": {"svg": "https://deckofcardsapi.com/static/img/9S.svg", "png": "https://deckofcardsapi.com/static/img/9S.png"}, "value": "9", "suit": "SPADES"}, {"code": "5D", "image": "https://deckofcardsapi.com/static/img/5D.png", "images": {"svg": "https://deckofcardsapi.com/static/img/5D.svg", "png": "https://deckofcardsapi.com/static/img/5D.png"}, "value": "5", "suit": "DIAMONDS"}, {"code": "4D", "image": "https://deckofcardsapi.com/static/img/4D.png", "images": {"svg": "https://deckofcardsapi.com/static/img/4D.svg", "png": "https://deckofcardsapi.com/static/img/4D.png"}, "value": "4", "suit": "DIAMONDS"}, {"code": "4H", "image": "https://deckofcardsapi.com/static/img/4H.png", "images": {"svg": "https://deckofcardsapi.com/static/img/4H.svg", "png": "https://deckofcardsapi.com/static/img/4H.png"}, "value": "4", "suit": "HEARTS"}, {"code": "QH", "image": "https://deckofcardsapi.com/static/img/QH.png", "images": {"svg": "https://deckofcardsapi.com/static/img/QH.svg", "png": "https://deckofcardsapi.com/static/img/QH.png"}, "value": "QUEEN", "suit": "HEARTS"}, {"code": "KC", "image": "https://deckofcardsapi.com/static/img/KC.png", "images": {"svg": "https://deckofcardsapi.com/static/img/KC.svg", "png": "https://deckofcardsapi.com/static/img/KC.png"}, "value": "KING", "suit": "CLUBS"}], "remaining": 37} 
 </msg>
<msg timestamp="20221128 18:52:05.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221128 18:52:05.067" endtime="20221128 18:52:05.566"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20221128 18:52:05.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221128 18:52:05.567" endtime="20221128 18:52:05.570"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${numero_de_cartas}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20221128 18:52:05.572" level="INFO">${numero_de_cartas} = 15</msg>
<status status="PASS" starttime="20221128 18:52:05.571" endtime="20221128 18:52:05.573"/>
</kw>
<status status="PASS" starttime="20221128 18:52:05.061" endtime="20221128 18:52:05.573"/>
</kw>
<kw name="E verificar que o response tem status &quot;200&quot; e &quot;OK&quot;" library="shufflepiles_steps" sourcename="E verificar que o response tem status &quot;${sc}&quot; e &quot;${s}&quot;">
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${sc}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20221128 18:52:05.575" endtime="20221128 18:52:05.576"/>
</kw>
<kw name="Request Should Be Successful" library="RequestsLibrary">
<arg>${response}</arg>
<doc>Fails if response status code is a client or server error (4xx, 5xx).</doc>
<status status="PASS" starttime="20221128 18:52:05.576" endtime="20221128 18:52:05.577"/>
</kw>
<status status="PASS" starttime="20221128 18:52:05.574" endtime="20221128 18:52:05.577"/>
</kw>
<kw name="Então eu terei a mesma quantidade de cartas no deck" library="drawacard_steps">
<kw name="Convert To Integer" library="BuiltIn">
<var>${numero_de_cartas}</var>
<arg>${numero_de_cartas}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20221128 18:52:05.581" level="INFO">${numero_de_cartas} = 15</msg>
<status status="PASS" starttime="20221128 18:52:05.580" endtime="20221128 18:52:05.583"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${response.json()['cards']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20221128 18:52:05.585" level="INFO">Length is 15</msg>
<msg timestamp="20221128 18:52:05.587" level="INFO">${length} = 15</msg>
<status status="PASS" starttime="20221128 18:52:05.584" endtime="20221128 18:52:05.588"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${numero_de_cartas}</arg>
<arg>${length}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221128 18:52:05.589" endtime="20221128 18:52:05.591"/>
</kw>
<status status="PASS" starttime="20221128 18:52:05.578" endtime="20221128 18:52:05.592"/>
</kw>
<kw name="E sucesso na retirada" library="drawacard_steps">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.json()['success']}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221128 18:52:05.595" endtime="20221128 18:52:05.596"/>
</kw>
<status status="PASS" starttime="20221128 18:52:05.593" endtime="20221128 18:52:05.597"/>
</kw>
<status status="PASS" starttime="20221128 18:52:03.551" endtime="20221128 18:52:05.598"/>
</test>
<doc>Esse arquivo contém os cenários de teste da API pública Deck of Cards</doc>
<status status="PASS" starttime="20221128 18:52:03.405" endtime="20221128 18:52:05.602"/>
</suite>
<status status="PASS" starttime="20221128 18:52:03.399" endtime="20221128 18:52:05.607"/>
</suite>
<status status="PASS" starttime="20221128 18:52:03.370" endtime="20221128 18:52:05.612"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Deckofcards">Deckofcards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Tests">Deckofcards.Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Drawacard Tc">Deckofcards.Tests.Drawacard Tc</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
