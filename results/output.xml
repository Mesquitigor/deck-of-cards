<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0 (Python 3.10.4 on win32)" generated="20221114 17:29:56.329" rpa="false" schemaversion="3">
<suite id="s1" name="Deckofcards" source="C:\Users\higor_mesquita\Documents\HST\PDI\2º PDI\Deckofcards">
<suite id="s1-s1" name="Tests" source="C:\Users\higor_mesquita\Documents\HST\PDI\2º PDI\Deckofcards\tests">
<suite id="s1-s1-s1" name="Abrandnewdeck Tc" source="C:\Users\higor_mesquita\Documents\HST\PDI\2º PDI\Deckofcards\tests\abrandnewdeck_tc.robot">
<kw name="Conexao com API" library="services" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>${alias}</arg>
<arg>${baseurl}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.540" endtime="20221114 17:29:56.540"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.539" endtime="20221114 17:29:56.540"/>
</kw>
<test id="s1-s1-s1-t1" name="CT-01 - Validar a criação com sucesso de um novo deck de cartas" line="7">
<kw name="Dado que eu faça uma requisição GET na API Deck of Cards" library="steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${alias}</arg>
<arg>url=${baseurl}new/</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.544" endtime="20221114 17:29:56.545"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.546" endtime="20221114 17:29:56.546"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${remaining}</var>
<arg>${response.json()}</arg>
<arg>$.remaining</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.546" endtime="20221114 17:29:56.547"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${remaining}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.547" endtime="20221114 17:29:56.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${remaining}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.547" endtime="20221114 17:29:56.548"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.543" endtime="20221114 17:29:56.548"/>
</kw>
<kw name="Quando eu verificar que o response tem status &quot;200&quot; e &quot;OK&quot;" library="steps" sourcename="Quando eu verificar que o response tem status &quot;${sc}&quot; e &quot;${s}&quot;">
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${sc}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.549" endtime="20221114 17:29:56.550"/>
</kw>
<kw name="Request Should Be Successful" library="RequestsLibrary">
<arg>${response}</arg>
<doc>Fails if response status code is a client or server error (4xx, 5xx).</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.550" endtime="20221114 17:29:56.550"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.548" endtime="20221114 17:29:56.551"/>
</kw>
<kw name="Então devo ter sucesso nas respostas dos campos" library="steps">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.json()['success']}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.551" endtime="20221114 17:29:56.552"/>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<arg>${response.json()['deck_id']}</arg>
<arg>12</arg>
<doc>Verifies that the length of the given item is correct.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.552" endtime="20221114 17:29:56.552"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.json()['shuffled']}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.553" endtime="20221114 17:29:56.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.553" endtime="20221114 17:29:56.554"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.551" endtime="20221114 17:29:56.554"/>
</kw>
<kw name="E pegar o valor do campo deck_id" library="steps">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${deck_id_new}</var>
<arg>${response.json()}</arg>
<arg>$.deck_id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.555" endtime="20221114 17:29:56.555"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${deck_id_new}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.556" endtime="20221114 17:29:56.556"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.555" endtime="20221114 17:29:56.556"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.541" endtime="20221114 17:29:56.556"/>
</test>
<test id="s1-s1-s1-t2" name="CT-02 - Validar a criação sem sucesso de um novo deck de cartas" line="13">
<kw name="Dado que eu faça uma requisição GET na API Deck of Cards incorreto" library="steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${alias}</arg>
<arg>url=${baseurl}old/</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.563" endtime="20221114 17:29:56.564"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.564" endtime="20221114 17:29:56.565"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${success}</var>
<arg>${response.json()}</arg>
<arg>$.success</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.565" endtime="20221114 17:29:56.565"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${error}</var>
<arg>${response.json()}</arg>
<arg>$.error</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.565" endtime="20221114 17:29:56.566"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${success}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.566" endtime="20221114 17:29:56.566"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${error}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.566" endtime="20221114 17:29:56.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${success}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.567" endtime="20221114 17:29:56.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${error}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.567" endtime="20221114 17:29:56.568"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.561" endtime="20221114 17:29:56.569"/>
</kw>
<kw name="Quando eu verificar que o response tem status &quot;404&quot; e &quot;Not Found&quot;" library="steps" sourcename="Quando eu verificar que o response tem status &quot;${sc}&quot; e &quot;${s}&quot;">
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${sc}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.570" endtime="20221114 17:29:56.571"/>
</kw>
<kw name="Request Should Be Successful" library="RequestsLibrary">
<arg>${response}</arg>
<doc>Fails if response status code is a client or server error (4xx, 5xx).</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.572" endtime="20221114 17:29:56.572"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.569" endtime="20221114 17:29:56.572"/>
</kw>
<kw name="Então devo ter falha nas respostas dos campos" library="steps">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.json()['success']}</arg>
<arg>${false}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.573" endtime="20221114 17:29:56.573"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.json()['error']}</arg>
<arg>"Deck ID does not exist."</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.573" endtime="20221114 17:29:56.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.574" endtime="20221114 17:29:56.574"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.573" endtime="20221114 17:29:56.574"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.558" endtime="20221114 17:29:56.576"/>
</test>
<doc>Esse arquivo contém os cenários de teste da API pública Deck of Cards</doc>
<status status="PASS" starttime="20221114 17:29:56.376" endtime="20221114 17:29:56.580"/>
</suite>
<suite id="s1-s1-s2" name="Drawacard Tc" source="C:\Users\higor_mesquita\Documents\HST\PDI\2º PDI\Deckofcards\tests\drawacard_tc.robot">
<kw name="Conexao com API" library="services" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>${alias}</arg>
<arg>${baseurl}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.597" endtime="20221114 17:29:56.598"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.596" endtime="20221114 17:29:56.598"/>
</kw>
<test id="s1-s1-s2-t1" name="CT-01 - Validar retirada de cartas com sucesso" line="8">
<kw name="Dado que eu possua um deck" library="steps">
<kw name="Dado que eu faça uma requisição GET na API Deck of Cards" library="steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${alias}</arg>
<arg>url=${baseurl}new/</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.601" endtime="20221114 17:29:56.602"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.603" endtime="20221114 17:29:56.603"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${remaining}</var>
<arg>${response.json()}</arg>
<arg>$.remaining</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.604" endtime="20221114 17:29:56.604"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${remaining}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.604" endtime="20221114 17:29:56.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${remaining}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.605" endtime="20221114 17:29:56.605"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.601" endtime="20221114 17:29:56.605"/>
</kw>
<kw name="E pegar o valor do campo deck_id" library="steps">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${deck_id_new}</var>
<arg>${response.json()}</arg>
<arg>$.deck_id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.606" endtime="20221114 17:29:56.606"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${deck_id_new}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.607" endtime="20221114 17:29:56.607"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.605" endtime="20221114 17:29:56.607"/>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<arg>${response.json()['deck_id']}</arg>
<arg>12</arg>
<doc>Verifies that the length of the given item is correct.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.607" endtime="20221114 17:29:56.608"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.600" endtime="20221114 17:29:56.608"/>
</kw>
<kw name="Quando eu escolher uma quantidade &quot;15&quot; cartas" library="steps" sourcename="Quando eu escolher uma quantidade &quot;${numero_de_cartas}&quot; cartas">
<kw name="Evaluate" library="BuiltIn">
<var>${deck_id_new}</var>
<arg>"".join(${deck_id_new})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.611" endtime="20221114 17:29:56.613"/>
</kw>
<kw name="Remove String" library="String">
<var>${deck_id_new}</var>
<arg>${deck_id_new}</arg>
<arg>[</arg>
<arg>]</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.613" endtime="20221114 17:29:56.613"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${alias}</arg>
<arg>url=${baseurl}${deck_id_new}/draw/?count=${numero_de_cartas}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.616" endtime="20221114 17:29:56.616"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.616" endtime="20221114 17:29:56.616"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.609" endtime="20221114 17:29:56.616"/>
</kw>
<kw name="E verificar que o response tem status &quot;200&quot; e &quot;OK&quot;" library="steps" sourcename="E verificar que o response tem status &quot;${sc}&quot; e &quot;${s}&quot;">
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${sc}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.617" endtime="20221114 17:29:56.618"/>
</kw>
<kw name="Request Should Be Successful" library="RequestsLibrary">
<arg>${response}</arg>
<doc>Fails if response status code is a client or server error (4xx, 5xx).</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.618" endtime="20221114 17:29:56.618"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.617" endtime="20221114 17:29:56.618"/>
</kw>
<kw name="Então eu terei a quantidade &quot;15&quot; de cartas" library="steps" sourcename="Então eu terei a quantidade &quot;${numero_de_cartas}&quot; de cartas">
<kw name="Convert To Integer" library="BuiltIn">
<var>${numero_de_cartas}</var>
<arg>${numero_de_cartas}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.619" endtime="20221114 17:29:56.620"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${length}</var>
<arg>${response.json()['cards']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.620" endtime="20221114 17:29:56.620"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${numero_de_cartas}</arg>
<arg>${length}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.620" endtime="20221114 17:29:56.621"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.619" endtime="20221114 17:29:56.621"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.598" endtime="20221114 17:29:56.621"/>
</test>
<doc>Esse arquivo contém os cenários de teste da API pública Deck of Cards</doc>
<status status="PASS" starttime="20221114 17:29:56.584" endtime="20221114 17:29:56.624"/>
</suite>
<suite id="s1-s1-s3" name="Shufflepiles Tc" source="C:\Users\higor_mesquita\Documents\HST\PDI\2º PDI\Deckofcards\tests\shufflepiles_tc.robot">
<kw name="Conexao com API" library="services" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>${alias}</arg>
<arg>${baseurl}</arg>
<arg>disable_warnings=1</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.641" endtime="20221114 17:29:56.642"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.641" endtime="20221114 17:29:56.643"/>
</kw>
<test id="s1-s1-s3-t1" name="CT-01 - Validar embaralhada do Deck" line="7">
<kw name="Dado que eu possua um deck" library="steps">
<kw name="Dado que eu faça uma requisição GET na API Deck of Cards" library="steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${alias}</arg>
<arg>url=${baseurl}new/</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.649" endtime="20221114 17:29:56.650"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.650" endtime="20221114 17:29:56.650"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${remaining}</var>
<arg>${response.json()}</arg>
<arg>$.remaining</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.650" endtime="20221114 17:29:56.651"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${remaining}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.651" endtime="20221114 17:29:56.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${remaining}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.652" endtime="20221114 17:29:56.653"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.648" endtime="20221114 17:29:56.653"/>
</kw>
<kw name="E pegar o valor do campo deck_id" library="steps">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${deck_id_new}</var>
<arg>${response.json()}</arg>
<arg>$.deck_id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.654" endtime="20221114 17:29:56.654"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${deck_id_new}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.654" endtime="20221114 17:29:56.654"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.653" endtime="20221114 17:29:56.655"/>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<arg>${response.json()['deck_id']}</arg>
<arg>12</arg>
<doc>Verifies that the length of the given item is correct.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.655" endtime="20221114 17:29:56.655"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.648" endtime="20221114 17:29:56.655"/>
</kw>
<kw name="Quando eu misturar este Deck" library="steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>${alias}</arg>
<arg>url=${baseurl}new/shuffle/?deck_count=1</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.656" endtime="20221114 17:29:56.657"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.657" endtime="20221114 17:29:56.657"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${deck_id_shuffled}</var>
<arg>${response.json()}</arg>
<arg>$.deck_id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.657" endtime="20221114 17:29:56.658"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${deck_id_shuffled}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.658" endtime="20221114 17:29:56.658"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.656" endtime="20221114 17:29:56.659"/>
</kw>
<kw name="E verificar que o response tem status &quot;200&quot; e &quot;OK&quot;" library="steps" sourcename="E verificar que o response tem status &quot;${sc}&quot; e &quot;${s}&quot;">
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${sc}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.662" endtime="20221114 17:29:56.664"/>
</kw>
<kw name="Request Should Be Successful" library="RequestsLibrary">
<arg>${response}</arg>
<doc>Fails if response status code is a client or server error (4xx, 5xx).</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.664" endtime="20221114 17:29:56.665"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.660" endtime="20221114 17:29:56.665"/>
</kw>
<kw name="Então devo ter um deck_id diferente do anterior" library="steps">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${deck_id_new}</arg>
<arg>${deck_id_shuffled}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20221114 17:29:56.666" endtime="20221114 17:29:56.666"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.665" endtime="20221114 17:29:56.666"/>
</kw>
<status status="PASS" starttime="20221114 17:29:56.643" endtime="20221114 17:29:56.667"/>
</test>
<doc>Esse arquivo contém os cenários de teste da API pública Deck of Cards</doc>
<status status="PASS" starttime="20221114 17:29:56.631" endtime="20221114 17:29:56.669"/>
</suite>
<status status="PASS" starttime="20221114 17:29:56.370" endtime="20221114 17:29:56.673"/>
</suite>
<status status="PASS" starttime="20221114 17:29:56.334" endtime="20221114 17:29:56.677"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Deckofcards">Deckofcards</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Tests">Deckofcards.Tests</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Abrandnewdeck Tc">Deckofcards.Tests.Abrandnewdeck Tc</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Drawacard Tc">Deckofcards.Tests.Drawacard Tc</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Shufflepiles Tc">Deckofcards.Tests.Shufflepiles Tc</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
